{
  "Lepold Ostendarp": "NAME_PATIENT",
  "8.1.1992": "DATE_BIRTH",
  "Kleiner ???\" wait there is \"Klinik ...\" let's add \"Klinik für Allgemeinchirurgie des Kreiskrankenhouse Greiz": "s LOCATION_HOSPITAL. Note spelling:",
  "Kreiskrankenhaus Greiz": "Yes.\n\nAdd dates:",
  "27.11.2064": "DATE",
  "8.11.2064": "DATE",
  "07.12.2064": "DATE",
  "01.12.2064": "DATE",
  "02.11.2064": "DATE",
  "10.11.2064": "DATE",
  "11.11.2064": "DATE",
  "15.11.2064": "DATE",
  "16.10.2064": "DATE",
  "31.???": "Many others:",
  "Z.n. Colitis 7.2063;": "hat's weird:",
  "2015": "Not relevant.\n\nLet's scan again quickly for more clear dates:\n\nIn diagnoses section lines contain",
  "Z.n. Crossektomie links...\", \"Z.n. Neo prostatae 2045\"; these look like abbreviations referencing previous events with year-month combos. These don't follow typical date patterns. Likely exclude.\n\nLater sections show \"Am 8. Nov": "efers to November 8 unspecified year. Year implied 2064 perhaps. Date unclear. Exclude.\n\nVarious times:",
  "Uhr": "ime only.\n\nThus main dates above.\n\nNow check for ID: none.\n\nCheck for CONTACT_ fields: none.\n\nOk build json.\n\nNeed ensure valid JSON without comments. Keys strings double quoted. Values simple strings.\n\nReturn single JSON object containing mappings.\n\nMake sure no duplication of keys. If same date occurs twice",
  "Ostendarp": "NAME_PATIENT",
  "Klinik für Allgemeinchirurgie des Kreiskrankenhaus Greiz": "LOCATION_HOSPITAL",
  "25.11.64": "DATE",
  "Gerd Bressl": "NAME_DOCTOR",
  "Zoeke Mölder": "NAME_DOCTOR"
}